# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# It's not necessary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=2'
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'accordion'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# on-focused-monitor-changed = ['move-mouse window-lazy-center']
# on-focus-changed = ['move-mouse window-force-center']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 5
inner.vertical =   5
outer.left =       0
outer.bottom =     0
outer.top =        0
outer.right =      0

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]
alt-e = ['mode alt']
shift-alt-1 = 'workspace 1'
shift-alt-2 = 'workspace 2'
shift-alt-3 = 'workspace 3'
shift-alt-4 = 'workspace 4'

shift-alt-h = ['focus --boundaries-action wrap-around-the-workspace left', 'move-mouse window-force-center']
shift-alt-l = ['focus --boundaries-action wrap-around-the-workspace right', 'move-mouse window-force-center']
shift-alt-j = ['focus --boundaries-action wrap-around-the-workspace dfs-next', 'move-mouse window-lazy-center']
shift-alt-k = ['focus --boundaries-action wrap-around-the-workspace dfs-prev', 'move-mouse window-lazy-center']


alt-o = 'exec-and-forget open -a /Applications/Obsidian.app'
alt-s = 'exec-and-forget open -a /Applications/Slack.app'
alt-a = 'exec-and-forget open -a /Applications/Alacritty.app'
alt-c = "exec-and-forget open -a 'Google Chrome'"
alt-r = "exec-and-forget open -a /Applications/Linear.app"
alt-w = "exec-and-forget open -a /Applications/Lens.app"
alt-d = "exec-and-forget open -a 'Docker Desktop'"
alt-b = "exec-and-forget open -a 'Calendar'"
alt-n = "exec-and-forget open -a 'Notes'"
shift-alt-m = "exec-and-forget open -a 'Messages'"
alt-m = "exec-and-forget open -a /Applications/Messenger.app"

alt-f = ['fullscreen']
alt-period = ['''exec-and-forget aerospace layout floating && osascript -e 'tell application "System Events" to key code 120 using {control down, option down, command down}' || aerospace layout tiling''', 'mode main']

[mode.alt.binding]
alt-e = ['mode alt']
space = ['mode main']
esc = ['mode main']
ctrl-alt-r = ['reload-config', 'mode main']

period = ['fullscreen off', 'layout tiles horizontal vertical']
comma = ['fullscreen off','layout accordion horizontal vertical']

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
h = ['focus --boundaries-action stop left', 'move-mouse window-force-center']
j = ['focus --boundaries-action stop down', 'move-mouse window-force-center']
k = ['focus --boundaries-action stop up', 'move-mouse window-force-center']
l = ['focus --boundaries-action stop right', 'move-mouse window-force-center']

c = ['move-mouse window-force-center']

# See: https://nikitabobko.github.io/AeroSpace/commands#move
shift-h = 'move left'
shift-j = 'move down'
shift-k = 'move up'
shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
minus = 'resize smart -128'
equal = 'resize smart +128'

alt-l = 'resize smart -128'
alt-h = 'resize smart +128'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
u = 'workspace prev'
i = 'workspace next'

shift-u = 'move-node-to-workspace prev'
shift-i = 'move-node-to-workspace next'

1 = 'workspace 1'
2 = 'workspace 2'
3 = 'workspace 3'
4 = 'workspace 4'

p = ['focus-monitor prev', 'move-mouse window-force-center']
n = ['focus-monitor next', 'move-mouse window-force-center']

shift-p = 'move-workspace-to-monitor prev'
shift-n = 'move-workspace-to-monitor next'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-1 = 'move-node-to-workspace 1'
alt-2 = 'move-node-to-workspace 2'
alt-3 = 'move-node-to-workspace 3'
alt-4 = 'move-node-to-workspace 4'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
shift-tab = 'move-workspace-to-monitor --wrap-around next'

shift-r = ['flatten-workspace-tree', 'mode alt'] # reset layout

#s = ['layout sticky tiling', 'mode alt'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2

f = ['fullscreen'] # Toggle between fullscreen
shift-f = ['layout floating tiling', 'mode alt'] # Toggle between floating and tiling layout

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
r =  'mode resize'
s = 'mode spacial'
w = 'mode workspace'

[mode.resize.binding]
alt-e = ['mode binding']
space = 'mode main'
esc = 'mode alt'
r = 'mode alt'
h = ['resize width -64']
j = ['resize height -64']
k = ['resize height +64']
l = ['resize width +64']
shift-h = ['resize width -8']
shift-j = ['resize height -8']
shift-k = ['resize height +8']
shift-l = ['resize width +8']

[mode.spacial.binding]
alt-e = ['mode special']
space = 'mode main'
esc = 'mode alt'
h = ['join-with left']
j = ['join-with down']
k = ['join-with up']
l = ['join-with right']

[mode.workspace.binding]
alt-e = ['mode wordspace']
space = 'mode main'
esc = 'mode alt'
w = 'mode alt'
h = ['workspace prev']
l = ['workspace next']
j = ['focus-monitor next']
k = ['focus-monitor prev']
shift-h = ['move-node-to-workspace prev']
shift-l = ['move-node-to-workspace next']
shift-k = ['move-node-to-monitor prev']
shift-j = ['move-node-to-monitor next']

#
# Application-specific configurations (optional)
#

[[on-window-detected]]
if.app-name-regex-substring = 'finder'
run = 'layout floating'
 
[[on-window-detected]]
if.app-name-regex-substring = 'camera'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'mail'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'discord'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'messenger'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'messages'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'numbers'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'photos'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'docker'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'spotify'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'slack'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'linear'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'lens'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'calendar'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'notes'
run = 'layout floating'
